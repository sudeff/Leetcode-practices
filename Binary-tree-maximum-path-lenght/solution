class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def maxPathSum(self, root) -> int:
        self.longest_path = float('-inf')


        def max_added(node):
            if node is None:
                return 0 
            
            left_max=max(max_added(node.left),0)
            right_max=max(max_added(node.right),0)

            self.longest_path = max(self.longest_path, node.val + left_max + right_max)
            return node.val + max(left_max, right_max)

        max_added(root)    
        return self.longest_path
    
root=TreeNode(1)
root.right=TreeNode(5)
root.left=TreeNode(7)
root.right.right=TreeNode(2)
root.right.left=TreeNode(9)
solution= Solution()
print(solution.maxPathSum(root))