from typing import List

class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        result_list = []

        def backtrack(path: List[int], used: List[bool]):
            if len(path) == len(nums):
                result_list.append(path[:])
                return

            for i in range(len(nums)):
                if not used[i]:
                    used[i] = True
                    backtrack(path + [nums[i]], used)
                    used[i] = False

        backtrack([], [False] * len(nums))
        return result_list

solution = Solution()
print(solution.permute([0, 1]))
